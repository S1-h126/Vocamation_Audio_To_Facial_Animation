{"ast":null,"code":"var _jsxFileName = \"C:\\\\facial-animation\\\\src\\\\components\\\\AudioRecorder.js\";\nimport React, { Component } from \"react\";\nimport \"./css/AudioRecorder.css\";\nimport { bgColor, fontColor } from '../Config.js';\nimport { Transition } from \"react-transition-group\";\n// import { ReactMic } from \"react-mic\";\nimport { transitionStyles, defaultStyle, darkFocus } from \"../Config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ReactMic;\nclass AudioRecorder extends Component {\n  constructor(props) {\n    super(props);\n    this.startRecording = () => {\n      setInterval(this.setTimer, 1000);\n      this.setState({\n        record: true,\n        start: Date.now()\n      });\n    };\n    this.setTimer = () => {\n      var seconds = Math.floor((Date.now() - this.state.start) / 1000);\n      var minutes = Math.floor(seconds / 60);\n      var time = \"\";\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n      if (minutes > 0) {\n        if (minutes > 9) {\n          time = minutes + \":\" + seconds;\n        } else {\n          time = \"0\" + minutes + \":\" + seconds;\n        }\n      } else {\n        time = \"00:\" + seconds;\n      }\n      this.setState({\n        timer: time\n      });\n    };\n    this.stopRecording = () => {\n      clearInterval();\n      this.setState({\n        record: false,\n        timer: \"00:00\"\n      });\n    };\n    this.onData = recordedBlob => {};\n    this.onStop = recordedBlob => {\n      console.log(\"recordedBlob is: \", recordedBlob);\n      this.props.newRecording(new File([recordedBlob.blob], \"recording.wav\", {\n        type: \"audio/wav\",\n        lastModified: Date.now()\n      }));\n    };\n    this.onSave = recordedBlob => {\n      this.setState({\n        downloadLinkURL: recordedBlob.blobURL\n      });\n    };\n    this.state = {\n      record: false,\n      downloadLinkURL: null,\n      timer: \"00:00\"\n    };\n    if (!ReactMic) {\n      try {\n        ReactMic = require(\"react-mic\").ReactMic;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recorder-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-recorder\",\n        children: [!this.state.record && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button record\",\n          onClick: this.startRecording,\n          type: \"button\",\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), this.state.record && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button record\",\n          onClick: this.stopRecording,\n          type: \"button\",\n          children: \"Stop recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Transition, {\n        timeout: 300,\n        in: !this.state.record && this.state.downloadLinkURL != null,\n        children: state => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...defaultStyle,\n            ...transitionStyles[state]\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"record download\",\n            href: this.state.downloadLinkURL,\n            download: \"recording.wav\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Transition, {\n        timeout: 300,\n        in: this.state.record,\n        children: state => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...defaultStyle,\n            ...transitionStyles[state]\n          },\n          children: [/*#__PURE__*/_jsxDEV(ReactMic, {\n            record: this.state.record,\n            className: \"sound-wave visualization\",\n            onStop: this.onStop,\n            onData: this.onData,\n            onSave: this.onSave,\n            mimeType: \"audio/wav\",\n            width: 0,\n            height: 0,\n            noiseSuppression: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"timer\",\n            children: this.state.timer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AudioRecorder;","map":{"version":3,"names":["React","Component","bgColor","fontColor","Transition","transitionStyles","defaultStyle","darkFocus","jsxDEV","_jsxDEV","ReactMic","AudioRecorder","constructor","props","startRecording","setInterval","setTimer","setState","record","start","Date","now","seconds","Math","floor","state","minutes","time","timer","stopRecording","clearInterval","onData","recordedBlob","onStop","console","log","newRecording","File","blob","type","lastModified","onSave","downloadLinkURL","blobURL","require","err","render","id","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","timeout","in","style","href","download","mimeType","width","height","noiseSuppression"],"sources":["C:/facial-animation/src/components/AudioRecorder.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./css/AudioRecorder.css\";\r\nimport { bgColor, fontColor } from '../Config.js'\r\nimport { Transition } from \"react-transition-group\";\r\n// import { ReactMic } from \"react-mic\";\r\nimport {transitionStyles, defaultStyle, darkFocus } from \"../Config.js\";\r\n\r\nlet ReactMic;\r\nclass AudioRecorder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      record: false,\r\n      downloadLinkURL: null,\r\n      timer: \"00:00\",\r\n    };\r\n    if (!ReactMic) {\r\n      try {\r\n        ReactMic = require(\"react-mic\").ReactMic;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  startRecording = () => {\r\n    setInterval(this.setTimer, 1000)\r\n    this.setState({ record: true, start: Date.now() });\r\n  };\r\n\r\n  setTimer = () => {\r\n    var seconds = Math.floor((Date.now() - this.state.start)/1000);\r\n    var minutes = Math.floor(seconds/60);\r\n    var time = \"\";\r\n    if(seconds<10){\r\n      seconds = \"0\"+seconds\r\n    }\r\n    if(minutes > 0){\r\n      if(minutes>9){\r\n        time = minutes+\":\"+seconds\r\n      }\r\n      else{\r\n        time = \"0\"+minutes+\":\"+seconds\r\n      }\r\n    }\r\n    else{\r\n      time=\"00:\"+seconds;\r\n    }\r\n    this.setState({timer: time})\r\n  }\r\n\r\n  stopRecording = () => {\r\n    clearInterval();\r\n    this.setState({ record: false, timer: \"00:00\" });\r\n  };\r\n\r\n  onData = (recordedBlob) => {\r\n  };\r\n\r\n  onStop = (recordedBlob) => {\r\n    console.log(\"recordedBlob is: \", recordedBlob);\r\n    this.props.newRecording(\r\n      new File([recordedBlob.blob], \"recording.wav\", {\r\n        type: \"audio/wav\",\r\n        lastModified: Date.now(),\r\n      })\r\n    );\r\n  };\r\n\r\n  onSave = (recordedBlob) => {\r\n    this.setState({\r\n      downloadLinkURL: recordedBlob.blobURL,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"recorder-container\">\r\n        <div className=\"horizontal-recorder\">\r\n          {!this.state.record &&\r\n        <button\r\n          className=\"record-button record\"\r\n          onClick={this.startRecording}\r\n          type=\"button\"\r\n        >\r\n          Record\r\n        </button>\r\n  }\r\n{this.state.record &&\r\n        <button\r\n          className=\"record-button record\"\r\n          onClick={this.stopRecording}\r\n          type=\"button\"\r\n        >\r\n          Stop recording\r\n        </button>}\r\n        </div>\r\n        <Transition timeout={300} in={!this.state.record && this.state.downloadLinkURL != null}>\r\n        {(state) => (\r\n          <div\r\n            style={{\r\n              ...defaultStyle,\r\n              ...transitionStyles[state],\r\n            }}\r\n          >\r\n        <a\r\n          className=\"record download\"\r\n          href={this.state.downloadLinkURL}\r\n          download=\"recording.wav\"\r\n        >\r\n          Download\r\n        </a>\r\n        </div>\r\n        )}\r\n      </Transition>\r\n        <Transition timeout={300} in={this.state.record}>\r\n        {(state) => (\r\n          <div\r\n            style={{\r\n              ...defaultStyle,\r\n              ...transitionStyles[state],\r\n            }}\r\n          >\r\n        <ReactMic\r\n          record={this.state.record}\r\n          className=\"sound-wave visualization\"\r\n          onStop={this.onStop}\r\n          onData={this.onData}\r\n          onSave={this.onSave}\r\n          mimeType=\"audio/wav\"\r\n          width={0}\r\n          height={0}\r\n          noiseSuppression={true}\r\n        />\r\n        <div id=\"timer\">{this.state.timer}</div>\r\n        </div>\r\n        )}\r\n      </Transition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudioRecorder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}