{"ast":null,"code":"var _jsxFileName = \"C:\\\\facial-animation\\\\src\\\\components\\\\Model.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils.js\";\nimport { darkBg, darkFocus, darkFont, lightBg, lightFont, lightFocus, visemeMap, lightLight1, lightLight2 } from \"../Config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Model extends Component {\n  // class that displays the avatar and handles the animation\n  constructor(props) {\n    super(props);\n    this.state = {\n      animationStatus: this.props.animationStatus,\n      intensity: this.props.sliderValue,\n      theme: this.props.theme\n    };\n    this.visemes = undefined;\n    this.visemesNames = undefined;\n    this.bgColor = undefined;\n    this.fontColor = undefined;\n    this.focusColor = undefined;\n    this.hemiIntensity = undefined;\n    this.spotIntensity = undefined;\n    this.move = 0.02;\n    this.delta = 0;\n    this.modelControlActive = false;\n    this.currentFrame = 1;\n    this.lidMove = 0.08;\n    this.lidSpeed = 0.08;\n    this.lidWait = 1;\n    this.exponent = 6;\n    this.dec = 15;\n    this.obamaRatio = [0.8, 0.8];\n    this.dhi = 1.1;\n    this.dsi = 0.75;\n    this.lhi = 0.85;\n    this.lsi = 0.2;\n    this.start = this.start.bind(this);\n    this.animate = this.animate.bind(this);\n    this.onWindowResize = this.onWindowResize.bind(this);\n    this.addCube = this.addCube.bind(this);\n    this.addModel = this.addModel.bind(this);\n    this.getMouthControl = this.getModelControl.bind(this);\n    this.moveLid = this.moveLid.bind(this);\n    this.nextViseme = this.nextViseme.bind(this);\n    this.resetModel = this.resetModel.bind(this);\n    this.moveLights = this.moveLights.bind(this);\n  }\n  componentDidMount() {\n    // set the current theme colors\n    if (this.state.theme === \"dark\") {\n      this.bgColor = darkBg;\n      this.fontColor = darkFont;\n      this.focusColor = darkFocus;\n      this.hemiIntensity = this.dhi;\n      this.spotIntensity = this.dsi;\n    } else {\n      this.bgColor = lightBg;\n      this.fontColor = lightFont;\n      this.focusColor = lightFocus;\n      this.hemiIntensity = this.lhi;\n      this.spotIntensity = this.lsi;\n    }\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // initialize the canvas scene\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    this.hemiLight = new THREE.HemisphereLight(this.bgColor, this.focusColor, this.hemiIntensity);\n    this.scene.add(this.hemiLight);\n    this.spotLight = new THREE.PointLight(this.fontColor, this.spotIntensity);\n    this.spotLight.position.set(-80, 100, 10);\n    this.spotLight.castShadow = true;\n    this.scene.add(this.spotLight);\n    const sphere = new THREE.SphereBufferGeometry(0.1, 16, 8);\n    this.light1 = new THREE.PointLight(0xffffff, 0.1, 50);\n    this.light1.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light1);\n    this.light2 = new THREE.PointLight(lightLight1, 0.1, 50);\n    this.light2.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light2);\n    this.light3 = new THREE.PointLight(lightLight2, 0.1, 50);\n    this.light3.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light3);\n    this.light4 = new THREE.PointLight(this.focusColor, 0.1, 50);\n    this.light4.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light4);\n    this.light5 = new THREE.PointLight(this.fontColor, 0.1, 50);\n    this.light5.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light5);\n\n    // adds the avatar to the scene\n    this.addModel();\n    this.camera.position.z = 0.5;\n    this.camera.position.y = 0;\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.update();\n    this.renderer.setSize(width, height);\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    this.mount.appendChild(this.renderer.domElement);\n    this.start();\n  }\n  componentDidUpdate(prevProps) {\n    // start/stop/pause the animation\n    if (prevProps.animationStatus !== this.props.animationStatus) {\n      this.setState({\n        animationStatus: this.props.animationStatus\n      });\n    }\n    // receive the new list of visemes\n    if (prevProps.visemes !== this.props.visemes) {\n      this.visemes = this.props.visemes;\n      this.visemesNames = [...new Set(this.props.visemes)];\n      this.currentFrame = 1;\n      console.log(this.visemes);\n      console.log(this.visemesNames);\n    }\n    // update the intensity of the articulation\n    if (prevProps.sliderValue !== this.props.sliderValue) {\n      this.setState({\n        intensity: this.props.sliderValue\n      });\n    }\n    // change the theme\n    if (prevProps.theme !== this.props.theme) {\n      this.setState({\n        theme: this.props.theme\n      }, () => {\n        console.log(this.state.theme);\n        if (this.state.theme === \"dark\") {\n          this.bgColor = darkBg;\n          this.fontColor = darkFont;\n          this.focusColor = darkFocus;\n          this.hemiIntensity = this.dhi;\n          this.spotIntensity = this.dsi;\n          this.spotLight.position.set(-80, 100, 10);\n        } else {\n          this.bgColor = lightBg;\n          this.fontColor = lightFont;\n          this.focusColor = lightFocus;\n          this.hemiIntensity = this.lhi;\n          this.spotIntensity = this.lsi;\n          this.spotLight.position.set(-80, 100, 100);\n        }\n        this.hemiLight.color = new THREE.Color(this.bgColor);\n        this.hemiLight.groundColor = new THREE.Color(this.focusColor);\n        this.hemiLight.intensity = this.hemiIntensity;\n        this.spotLight.color = new THREE.Color(this.fontColor);\n        this.spotLight.intensity = this.spotIntensity;\n        this.light1.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light2.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light3.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light4.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light4.color = new THREE.Color(this.focusColor);\n        this.light5.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light5.color = new THREE.Color(this.fontColor);\n        this.model.traverse(o => {\n          if (o.isMesh && (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")) {\n            if (this.state.theme === \"dark\") {\n              o.material.emissive = new THREE.Color(this.bgColor);\n              o.material.shininess = 150;\n            } else {\n              o.material.emissive = new THREE.Color(\"#000000\");\n              o.material.shininess = 70;\n            }\n          }\n        });\n      });\n    }\n  }\n  addCube(x, y, z) {\n    // test function for the graphics library\n    var geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);\n    geometry.translate(x, y, z);\n    var material = new THREE.MeshBasicMaterial({\n      color: \"#433F81\"\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    this.scene.add(cube);\n  }\n  addModel() {\n    // loads the model to the page\n    var loader = new GLTFLoader();\n    loader.load(\"model/head_new_visemes_2.gltf\", gltf => {\n      // clones the model\n      this.model = SkeletonUtils.clone(gltf.scene);\n      console.log(this.model);\n      this.scene.add(this.model);\n      this.getModelControl();\n      this.model.traverse(o => {\n        // adds the material and color to the model\n        if (o.isMesh && (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")) {\n          var newMaterial;\n          if (this.state.theme === \"dark\") {\n            newMaterial = new THREE.MeshPhongMaterial({\n              color: 0xffffff,\n              specular: 0x111111,\n              shininess: 150\n            });\n            newMaterial.emissive = new THREE.Color(this.bgColor);\n          } else {\n            newMaterial = new THREE.MeshPhongMaterial({\n              color: 0xffffff,\n              specular: 0x111111,\n              shininess: 50\n            });\n          }\n          newMaterial.needsUpdate = true;\n          newMaterial.skinning = o.material.skinning;\n          newMaterial.morphTargets = o.material.morphTargets;\n          newMaterial.morphNormals = o.material.morphNormals;\n          o.material = newMaterial;\n        }\n      });\n      this.renderScene();\n      this.props.mounted();\n      // create logger for controllers values tracking\n      this.logger = {};\n      this.logger[\"phones\"] = [];\n      for (var visemeName of Object.keys(this.modelControlDict)) {\n        if (visemeName !== \"wink\") {\n          this.logger[visemeName] = [];\n        }\n      }\n      console.log(this.model);\n    }, undefined, function (error) {\n      console.error(error);\n    });\n  }\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n  }\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n  getModelControl() {\n    // gets the controllers of the shape keys of the model\n    if (this.model) {\n      this.model.traverse(o => {\n        if (o.isMesh && o.name === \"head\") {\n          this.modelControl = o.morphTargetInfluences;\n          this.modelControlDict = o.morphTargetDictionary;\n          this.modelControlActive = true;\n        }\n      });\n    }\n  }\n  calculateDistance(point1, point2) {\n    return Math.sqrt(Math.pow(point1[0] - point2[0], 2) + Math.pow(point1[1] - point2[1], 2));\n  }\n  moveLid() {\n    // animates the blinking\n    if (this.modelControl) {\n      if (this.modelControl[this.modelControlDict[\"wink\"]] <= 0) {\n        if (this.lidWait > 400) {\n          this.lidMove = this.lidSpeed;\n          this.lidWait = 0;\n        } else {\n          this.lidMove = 0;\n        }\n        this.lidWait += 1;\n      } else if (this.modelControl[this.modelControlDict[\"wink\"]] > 1) {\n        this.lidMove = -this.lidMove;\n      }\n      this.modelControl[this.modelControlDict[\"wink\"]] += this.lidMove;\n    }\n  }\n  moveLights() {\n    // animates the moving lights\n    const time = Date.now() * 0.0005;\n    this.light1.position.x = Math.sin(time * 0.7) * 10;\n    this.light1.position.y = Math.cos(time * 0.5) * 20;\n    this.light1.position.z = Math.cos(time * 0.3) * 10;\n    this.light2.position.x = Math.cos(time * 0.3) * 10;\n    this.light2.position.y = Math.sin(time * 0.5) * 20;\n    this.light2.position.z = Math.sin(time * 0.7) * 10;\n    this.light3.position.x = Math.sin(time * 0.7) * 10;\n    this.light3.position.y = Math.cos(time * 0.3) * 20;\n    this.light3.position.z = Math.sin(time * 0.5) * 10;\n    this.light4.position.x = Math.cos(time * 0.3) * 10;\n    this.light4.position.y = Math.cos(time * 0.7) * 20;\n    this.light4.position.z = Math.sin(time * 0.5) * 10;\n    this.light5.position.x = Math.cos(time * 0.3) * 10;\n    this.light5.position.y = Math.sin(time * 0.7) * 20;\n    this.light5.position.z = Math.cos(time * 0.5) * 10;\n  }\n  nextViseme() {\n    // takes the next viseme from the list and changes the controllers\n    // decrease added value\n    if (this.currentFrame > 0 && this.visemes[this.currentFrame] === this.visemes[this.currentFrame - 1]) {\n      this.exponent -= 0.1;\n    } else this.exponent = 10;\n    // decrease all visemes\n    for (var visemeName of Object.keys(this.modelControlDict)) {\n      if (visemeName !== \"wink\") {\n        this.modelControl[this.modelControlDict[visemeName]] -= this.state.intensity / this.dec;\n        if (this.modelControl[this.modelControlDict[visemeName]] < 0) this.modelControl[this.modelControlDict[visemeName]] = 0;\n      }\n    }\n    // increase the current visemes\n    var mapping = visemeMap[this.visemes[this.currentFrame]];\n    for (var currentVisemeName of Object.keys(mapping)) {\n      // calculate the added value\n      var inc = Math.pow(this.state.intensity, this.exponent);\n      // check if the visime is relative\n      if (mapping[currentVisemeName] > 1) inc /= 4;\n      // add the value\n      this.modelControl[this.modelControlDict[currentVisemeName]] += this.state.intensity / this.dec;\n      this.modelControl[this.modelControlDict[currentVisemeName]] += inc;\n      // check constraints\n      if (this.modelControl[this.modelControlDict[currentVisemeName]] > 1 && mapping[currentVisemeName] > 1) this.modelControl[this.modelControlDict[currentVisemeName]] = 1;\n      if (this.modelControl[this.modelControlDict[currentVisemeName]] > mapping[currentVisemeName] * this.state.intensity && !(mapping[currentVisemeName] > 1)) this.modelControl[this.modelControlDict[currentVisemeName]] = mapping[currentVisemeName] * this.state.intensity;\n    }\n    // log the values in the shape key logger\n    for (var visemeName of Object.keys(this.modelControlDict)) {\n      if (visemeName !== \"wink\") {\n        this.logger[visemeName].push(this.modelControl[this.modelControlDict[visemeName]]);\n      }\n    }\n    this.logger[\"phones\"].push(this.visemes[this.currentFrame]);\n  }\n  resetModel() {\n    if (this.modelControl) {\n      for (var i = 0; i < this.modelControl.length; i++) {\n        if (this.modelControlDict[\"wink\"] !== i) this.modelControl[i] = 0;\n      }\n    }\n  }\n  async animate() {\n    // main animation loop\n    if (this.state.animationStatus === \"PLAY\" && this.modelControlActive) {\n      // get the next frame/viseme\n      this.nextViseme();\n      this.currentFrame += 1;\n      this.props.setProgress(this.currentFrame / this.visemes.length);\n      if (this.currentFrame >= this.visemes.length) {\n        // end of animation\n        this.currentFrame = 0;\n        this.resetModel();\n        this.props.setProgress(0);\n      }\n      if (this.props.audio.ended) {\n        // end of audio\n        this.props.stopAnimation();\n        // display the logged values\n        if (this.logger) {\n          var json = JSON.stringify(this.logger);\n          // console.log(json)\n        }\n      }\n    } else if (this.state.animationStatus === \"STOP\") {\n      // animation is not playing\n      this.currentFrame = 0;\n      this.resetModel();\n      this.props.setProgress(0);\n    }\n    this.moveLid();\n    this.moveLights();\n    this.controls.update();\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mount => {\n        this.mount = mount;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Model;","map":{"version":3,"names":["React","Component","THREE","GLTFLoader","OrbitControls","SkeletonUtils","darkBg","darkFocus","darkFont","lightBg","lightFont","lightFocus","visemeMap","lightLight1","lightLight2","jsxDEV","_jsxDEV","Model","constructor","props","state","animationStatus","intensity","sliderValue","theme","visemes","undefined","visemesNames","bgColor","fontColor","focusColor","hemiIntensity","spotIntensity","move","delta","modelControlActive","currentFrame","lidMove","lidSpeed","lidWait","exponent","dec","obamaRatio","dhi","dsi","lhi","lsi","start","bind","animate","onWindowResize","addCube","addModel","getMouthControl","getModelControl","moveLid","nextViseme","resetModel","moveLights","componentDidMount","width","window","innerWidth","height","innerHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","alpha","hemiLight","HemisphereLight","add","spotLight","PointLight","position","set","castShadow","sphere","SphereBufferGeometry","light1","Mesh","MeshBasicMaterial","color","light2","light3","light4","light5","z","y","controls","domElement","update","setSize","addEventListener","mount","appendChild","componentDidUpdate","prevProps","setState","Set","console","log","Color","groundColor","children","material","model","traverse","o","isMesh","name","emissive","shininess","x","geometry","BoxGeometry","translate","cube","loader","load","gltf","clone","newMaterial","MeshPhongMaterial","specular","needsUpdate","skinning","morphTargets","morphNormals","renderScene","mounted","logger","visemeName","Object","keys","modelControlDict","error","aspect","updateProjectionMatrix","componentWillUnmount","removeChild","frameId","requestAnimationFrame","modelControl","morphTargetInfluences","morphTargetDictionary","calculateDistance","point1","point2","Math","sqrt","pow","time","Date","now","sin","cos","mapping","currentVisemeName","inc","push","i","length","setProgress","audio","ended","stopAnimation","json","JSON","stringify","render","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/facial-animation/src/components/Model.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils.js\";\r\nimport {\r\n  darkBg,\r\n  darkFocus,\r\n  darkFont,\r\n  lightBg,\r\n  lightFont,\r\n  lightFocus,\r\n  visemeMap,\r\n  lightLight1,\r\n  lightLight2,\r\n} from \"../Config.js\";\r\n\r\nclass Model extends Component {\r\n  // class that displays the avatar and handles the animation\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animationStatus: this.props.animationStatus,\r\n      intensity: this.props.sliderValue,\r\n      theme: this.props.theme,\r\n    };\r\n    this.visemes = undefined;\r\n    this.visemesNames = undefined;\r\n\r\n    this.bgColor = undefined;\r\n    this.fontColor = undefined;\r\n    this.focusColor = undefined;\r\n    this.hemiIntensity = undefined;\r\n    this.spotIntensity = undefined;\r\n\r\n    this.move = 0.02;\r\n    this.delta = 0;\r\n\r\n    this.modelControlActive = false;\r\n\r\n    this.currentFrame = 1;\r\n\r\n    this.lidMove = 0.08;\r\n    this.lidSpeed = 0.08;\r\n    this.lidWait = 1;\r\n\r\n    this.exponent = 6;\r\n    this.dec = 15;\r\n\r\n    this.obamaRatio = [0.8, 0.8];\r\n\r\n    this.dhi = 1.1;\r\n    this.dsi = 0.75;\r\n    this.lhi = 0.85;\r\n    this.lsi = 0.2;\r\n\r\n    this.start = this.start.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n    this.onWindowResize = this.onWindowResize.bind(this);\r\n    this.addCube = this.addCube.bind(this);\r\n    this.addModel = this.addModel.bind(this);\r\n    this.getMouthControl = this.getModelControl.bind(this);\r\n    this.moveLid = this.moveLid.bind(this);\r\n    this.nextViseme = this.nextViseme.bind(this);\r\n    this.resetModel = this.resetModel.bind(this);\r\n    this.moveLights = this.moveLights.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // set the current theme colors\r\n    if (this.state.theme === \"dark\") {\r\n      this.bgColor = darkBg;\r\n      this.fontColor = darkFont;\r\n      this.focusColor = darkFocus;\r\n      this.hemiIntensity = this.dhi;\r\n      this.spotIntensity = this.dsi;\r\n    } else {\r\n      this.bgColor = lightBg;\r\n      this.fontColor = lightFont;\r\n      this.focusColor = lightFocus;\r\n      this.hemiIntensity = this.lhi;\r\n      this.spotIntensity = this.lsi;\r\n    }\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    // initialize the canvas scene\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n\r\n    this.hemiLight = new THREE.HemisphereLight(\r\n      this.bgColor,\r\n      this.focusColor,\r\n      this.hemiIntensity\r\n    );\r\n    this.scene.add(this.hemiLight);\r\n\r\n    this.spotLight = new THREE.PointLight(this.fontColor, this.spotIntensity);\r\n    this.spotLight.position.set(-80, 100, 10);\r\n    this.spotLight.castShadow = true;\r\n    this.scene.add(this.spotLight);\r\n\r\n    const sphere = new THREE.SphereBufferGeometry(0.1, 16, 8);\r\n\r\n    this.light1 = new THREE.PointLight(0xffffff, 0.1, 50);\r\n    this.light1.add(\r\n      new THREE.Mesh(\r\n        sphere,\r\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\r\n      )\r\n    );\r\n    this.scene.add(this.light1);\r\n\r\n    this.light2 = new THREE.PointLight(lightLight1, 0.1, 50);\r\n    this.light2.add(\r\n      new THREE.Mesh(\r\n        sphere,\r\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\r\n      )\r\n    );\r\n    this.scene.add(this.light2);\r\n\r\n    this.light3 = new THREE.PointLight(lightLight2, 0.1, 50);\r\n    this.light3.add(\r\n      new THREE.Mesh(\r\n        sphere,\r\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\r\n      )\r\n    );\r\n    this.scene.add(this.light3);\r\n\r\n    this.light4 = new THREE.PointLight(this.focusColor, 0.1, 50);\r\n    this.light4.add(\r\n      new THREE.Mesh(\r\n        sphere,\r\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\r\n      )\r\n    );\r\n    this.scene.add(this.light4);\r\n\r\n    this.light5 = new THREE.PointLight(this.fontColor, 0.1, 50);\r\n    this.light5.add(\r\n      new THREE.Mesh(\r\n        sphere,\r\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\r\n      )\r\n    );\r\n    this.scene.add(this.light5);\r\n\r\n    // adds the avatar to the scene\r\n    this.addModel();\r\n\r\n    this.camera.position.z = 0.5;\r\n    this.camera.position.y = 0;\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.update();\r\n\r\n    this.renderer.setSize(width, height);\r\n\r\n    window.addEventListener(\"resize\", this.onWindowResize, false);\r\n\r\n    this.mount.appendChild(this.renderer.domElement);\r\n\r\n    this.start();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // start/stop/pause the animation\r\n    if (prevProps.animationStatus !== this.props.animationStatus) {\r\n      this.setState({\r\n        animationStatus: this.props.animationStatus,\r\n      });\r\n    }\r\n    // receive the new list of visemes\r\n    if (prevProps.visemes !== this.props.visemes) {\r\n      this.visemes = this.props.visemes;\r\n      this.visemesNames = [...new Set(this.props.visemes)];\r\n      this.currentFrame = 1;\r\n      console.log(this.visemes);\r\n      console.log(this.visemesNames);\r\n    }\r\n    // update the intensity of the articulation\r\n    if (prevProps.sliderValue !== this.props.sliderValue) {\r\n      this.setState({\r\n        intensity: this.props.sliderValue,\r\n      });\r\n    }\r\n    // change the theme\r\n    if (prevProps.theme !== this.props.theme) {\r\n      this.setState(\r\n        {\r\n          theme: this.props.theme,\r\n        },\r\n        () => {\r\n          console.log(this.state.theme);\r\n          if (this.state.theme === \"dark\") {\r\n            this.bgColor = darkBg;\r\n            this.fontColor = darkFont;\r\n            this.focusColor = darkFocus;\r\n            this.hemiIntensity = this.dhi;\r\n            this.spotIntensity = this.dsi;\r\n            this.spotLight.position.set(-80, 100, 10);\r\n          } else {\r\n            this.bgColor = lightBg;\r\n            this.fontColor = lightFont;\r\n            this.focusColor = lightFocus;\r\n            this.hemiIntensity = this.lhi;\r\n            this.spotIntensity = this.lsi;\r\n            this.spotLight.position.set(-80, 100, 100);\r\n          }\r\n          this.hemiLight.color = new THREE.Color(this.bgColor);\r\n          this.hemiLight.groundColor = new THREE.Color(this.focusColor);\r\n          this.hemiLight.intensity = this.hemiIntensity;\r\n\r\n          this.spotLight.color = new THREE.Color(this.fontColor);\r\n          this.spotLight.intensity = this.spotIntensity;\r\n\r\n          this.light1.children[0].material.color = new THREE.Color(\r\n            this.fontColor\r\n          );\r\n\r\n          this.light2.children[0].material.color = new THREE.Color(\r\n            this.fontColor\r\n          );\r\n\r\n          this.light3.children[0].material.color = new THREE.Color(\r\n            this.fontColor\r\n          );\r\n\r\n          this.light4.children[0].material.color = new THREE.Color(\r\n            this.fontColor\r\n          );\r\n          this.light4.color = new THREE.Color(this.focusColor);\r\n\r\n          this.light5.children[0].material.color = new THREE.Color(\r\n            this.fontColor\r\n          );\r\n          this.light5.color = new THREE.Color(this.fontColor);\r\n\r\n          this.model.traverse((o) => {\r\n            if (\r\n              o.isMesh &&\r\n              (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")\r\n            ) {\r\n              if (this.state.theme === \"dark\") {\r\n                o.material.emissive = new THREE.Color(this.bgColor);\r\n                o.material.shininess = 150;\r\n              } else {\r\n                o.material.emissive = new THREE.Color(\"#000000\");\r\n                o.material.shininess = 70;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  addCube(x, y, z) {\r\n    // test function for the graphics library\r\n    var geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n    geometry.translate(x, y, z);\r\n    var material = new THREE.MeshBasicMaterial({ color: \"#433F81\" });\r\n    var cube = new THREE.Mesh(geometry, material);\r\n    this.scene.add(cube);\r\n  }\r\n\r\n  addModel() {\r\n    // loads the model to the page\r\n    var loader = new GLTFLoader();\r\n\r\n    loader.load(\r\n      \"model/head_new_visemes_2.gltf\",\r\n      (gltf) => {\r\n        // clones the model\r\n        this.model = SkeletonUtils.clone(gltf.scene);\r\n        console.log(this.model);\r\n        this.scene.add(this.model);\r\n        this.getModelControl();\r\n       \r\n        this.model.traverse((o) => {\r\n          // adds the material and color to the model\r\n          if (\r\n            o.isMesh &&\r\n            (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")\r\n          ) {\r\n            var newMaterial;\r\n            if (this.state.theme === \"dark\") {\r\n              newMaterial = new THREE.MeshPhongMaterial({\r\n                color: 0xffffff,\r\n                specular: 0x111111,\r\n                shininess: 150,\r\n              });\r\n              newMaterial.emissive = new THREE.Color(this.bgColor);\r\n            } else {\r\n              newMaterial = new THREE.MeshPhongMaterial({\r\n                color: 0xffffff,\r\n                specular: 0x111111,\r\n                shininess: 50,\r\n              });\r\n            }\r\n            newMaterial.needsUpdate = true;\r\n            newMaterial.skinning = o.material.skinning;\r\n            newMaterial.morphTargets = o.material.morphTargets;\r\n            newMaterial.morphNormals = o.material.morphNormals;\r\n            o.material = newMaterial;\r\n          }\r\n        });\r\n        this.renderScene();\r\n        this.props.mounted();\r\n        // create logger for controllers values tracking\r\n        this.logger = {};\r\n        this.logger[\"phones\"] = [];\r\n        for (var visemeName of Object.keys(this.modelControlDict)) {\r\n          if (visemeName !== \"wink\") {\r\n            this.logger[visemeName] = [];\r\n          }\r\n        }\r\n        console.log(this.model);\r\n      },\r\n      undefined,\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onWindowResize() {\r\n    this.camera.aspect = window.innerWidth / window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  start() {\r\n    if (!this.frameId) {\r\n      this.frameId = requestAnimationFrame(this.animate);\r\n    }\r\n  }\r\n\r\n  getModelControl() {\r\n    // gets the controllers of the shape keys of the model\r\n    if (this.model) {\r\n      this.model.traverse((o) => {\r\n        if (o.isMesh && o.name === \"head\") {\r\n          this.modelControl = o.morphTargetInfluences;\r\n          this.modelControlDict = o.morphTargetDictionary;\r\n          this.modelControlActive = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateDistance(point1, point2) {\r\n    return Math.sqrt(\r\n      Math.pow(point1[0] - point2[0], 2) + Math.pow(point1[1] - point2[1], 2)\r\n    );\r\n  }\r\n\r\n  moveLid() {\r\n    // animates the blinking\r\n    if (this.modelControl) {\r\n      if (this.modelControl[this.modelControlDict[\"wink\"]] <= 0) {\r\n        if (this.lidWait > 400) {\r\n          this.lidMove = this.lidSpeed;\r\n          this.lidWait = 0;\r\n        } else {\r\n          this.lidMove = 0;\r\n        }\r\n        this.lidWait += 1;\r\n      } else if (this.modelControl[this.modelControlDict[\"wink\"]] > 1) {\r\n        this.lidMove = -this.lidMove;\r\n      }\r\n      this.modelControl[this.modelControlDict[\"wink\"]] += this.lidMove;\r\n    }\r\n  }\r\n\r\n  moveLights() {\r\n    // animates the moving lights\r\n    const time = Date.now() * 0.0005;\r\n\r\n    this.light1.position.x = Math.sin(time * 0.7) * 10;\r\n    this.light1.position.y = Math.cos(time * 0.5) * 20;\r\n    this.light1.position.z = Math.cos(time * 0.3) * 10;\r\n\r\n    this.light2.position.x = Math.cos(time * 0.3) * 10;\r\n    this.light2.position.y = Math.sin(time * 0.5) * 20;\r\n    this.light2.position.z = Math.sin(time * 0.7) * 10;\r\n\r\n    this.light3.position.x = Math.sin(time * 0.7) * 10;\r\n    this.light3.position.y = Math.cos(time * 0.3) * 20;\r\n    this.light3.position.z = Math.sin(time * 0.5) * 10;\r\n\r\n    this.light4.position.x = Math.cos(time * 0.3) * 10;\r\n    this.light4.position.y = Math.cos(time * 0.7) * 20;\r\n    this.light4.position.z = Math.sin(time * 0.5) * 10;\r\n\r\n    this.light5.position.x = Math.cos(time * 0.3) * 10;\r\n    this.light5.position.y = Math.sin(time * 0.7) * 20;\r\n    this.light5.position.z = Math.cos(time * 0.5) * 10;\r\n  }\r\n\r\n  nextViseme() {\r\n    // takes the next viseme from the list and changes the controllers\r\n    // decrease added value\r\n    if (\r\n      this.currentFrame > 0 &&\r\n      this.visemes[this.currentFrame] === this.visemes[this.currentFrame - 1]\r\n    ) {\r\n      this.exponent -= 0.1;\r\n    } else this.exponent = 10;\r\n    // decrease all visemes\r\n    for (var visemeName of Object.keys(this.modelControlDict)) {\r\n      if (visemeName !== \"wink\") {\r\n        this.modelControl[this.modelControlDict[visemeName]] -=\r\n          this.state.intensity / this.dec;\r\n        if (this.modelControl[this.modelControlDict[visemeName]] < 0)\r\n          this.modelControl[this.modelControlDict[visemeName]] = 0;\r\n      }\r\n    }\r\n    // increase the current visemes\r\n    var mapping = visemeMap[this.visemes[this.currentFrame]];\r\n    for (var currentVisemeName of Object.keys(mapping)) {\r\n      // calculate the added value\r\n      var inc = Math.pow(this.state.intensity, this.exponent);\r\n      // check if the visime is relative\r\n      if (mapping[currentVisemeName] > 1) inc /= 4;\r\n      // add the value\r\n      this.modelControl[this.modelControlDict[currentVisemeName]] +=\r\n        this.state.intensity / this.dec;\r\n      this.modelControl[this.modelControlDict[currentVisemeName]] += inc;\r\n      // check constraints\r\n      if (\r\n        this.modelControl[this.modelControlDict[currentVisemeName]] > 1 &&\r\n        mapping[currentVisemeName] > 1\r\n      )\r\n        this.modelControl[this.modelControlDict[currentVisemeName]] = 1;\r\n      if (\r\n        this.modelControl[this.modelControlDict[currentVisemeName]] >\r\n          mapping[currentVisemeName] * this.state.intensity &&\r\n        !(mapping[currentVisemeName] > 1)\r\n      )\r\n        this.modelControl[this.modelControlDict[currentVisemeName]] =\r\n          mapping[currentVisemeName] * this.state.intensity;\r\n    }\r\n    // log the values in the shape key logger\r\n    for (var visemeName of Object.keys(this.modelControlDict)) {\r\n      if (visemeName !== \"wink\") {\r\n        this.logger[visemeName].push(\r\n          this.modelControl[this.modelControlDict[visemeName]]\r\n        );\r\n      }\r\n    }\r\n    this.logger[\"phones\"].push(this.visemes[this.currentFrame]);\r\n  }\r\n\r\n  resetModel() {\r\n    if (this.modelControl) {\r\n      for (var i = 0; i < this.modelControl.length; i++) {\r\n        if (this.modelControlDict[\"wink\"] !== i) this.modelControl[i] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  async animate() {\r\n    // main animation loop\r\n    if (this.state.animationStatus === \"PLAY\" && this.modelControlActive) {\r\n      // get the next frame/viseme\r\n      this.nextViseme();\r\n      this.currentFrame += 1;\r\n      this.props.setProgress(this.currentFrame / this.visemes.length);\r\n      if (this.currentFrame >= this.visemes.length) {\r\n        // end of animation\r\n        this.currentFrame = 0;\r\n        this.resetModel();\r\n        this.props.setProgress(0);\r\n      }\r\n      if (this.props.audio.ended) {\r\n        // end of audio\r\n        this.props.stopAnimation();\r\n        // display the logged values\r\n        if (this.logger) {\r\n          var json = JSON.stringify(this.logger);\r\n          // console.log(json)\r\n        }\r\n      }\r\n    } else if (this.state.animationStatus === \"STOP\") {\r\n      // animation is not playing\r\n      this.currentFrame = 0;\r\n      this.resetModel();\r\n      this.props.setProgress(0);\r\n    }\r\n\r\n    this.moveLid();\r\n    this.moveLights();\r\n    this.controls.update();\r\n    this.renderScene();\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  renderScene() {\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={(mount) => {\r\n          this.mount = mount;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Model;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}